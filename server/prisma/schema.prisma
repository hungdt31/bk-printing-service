datasource db {
  provider = "postgresql" // Adjust the provider according to your database (e.g., "postgresql", "sqlite")
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  user_id           Int          @id @default(autoincrement())
  username          String?      @db.VarChar(32) // Optional for customers
  password          String       @db.VarChar(128)
  email             String       @unique @db.VarChar(32)
  phone             String?      @db.VarChar(16) // Optional for customers
  dob               DateTime?    // Optional for customers
  balance           Int         @default(0) // Optional for SPSO
  created_at        DateTime     @default(now())
  last_used         DateTime     @default(now())  @updatedAt
  role              UserRole     @default(STUDENT) // Distinguish user roles
  // Relations
  printOrders       PrintOrder[]    @relation("UserPrintOrders")
  purchaseOrders    PurchaseOrder[] @relation("UserPurchaseOrders")
  documents         Document[]      @relation("UserDocuments")
  avatar            Avatar?         @relation("UserAvatar")
}

model Printer {
  printer_id   Int       @id @default(autoincrement())
  name         String    @unique @db.VarChar(256)  // Tên của máy in, đảm bảo duy nhất để tránh trùng lặp tên
  brand        String    @db.VarChar(256) // Thương hiệu (brand) của máy in, ví dụ: Canon, HP, Epson
  model        String    @db.VarChar(256) // Model của máy in, ví dụ: "HP LaserJet Pro MFP M428fdw"
  description  String    @db.VarChar(4096) // Mô tả chi tiết về máy in, bao gồm các thông tin như tính năng, giới hạn, hoặc hướng dẫn sử dụng
  loc_campus   Campus    @default(ONE) // Tên khuôn viên (campus) mà máy in được đặt, với giá trị mặc định là ONE
  loc_building Building  @default(H1) // Tên tòa nhà mà máy in được đặt trong khuôn viên
  loc_room     String    @db.VarChar(64) // Số phòng cụ thể mà máy in được đặt
  // Trạng thái của máy in, với giá trị mặc định là RUNNING
  // Các trạng thái có thể bao gồm: RUNNING (hoạt động), DISABLED (vô hiệu hóa), v.v.
  status       PrinterStatus @default(RUNNING)
  // Mối quan hệ giữa máy in và các tài liệu đã được in qua máy in này
  // Một máy in có thể liên kết với nhiều tài liệu (1:N)
  printOrders    PrintOrder[] @relation("PrintOrderDocuments")
}

model PrintOrder {
  print_id              Int           @id @unique @default(autoincrement())
  side                  Side          @default(ONE) // In một mặt hoặc hai mặt
  page_size             PageSize      @default(A4)  // Kích thước trang in (A4, A3, Letter, v.v.)
  orientation           Orientation   @default(PORTRAIT) // Hướng in
  pages_per_sheet       Int           @default(1)   // Số trang trên một tờ
  scale                 Float         @default(1.0) // Tỉ lệ thu phóng (1.0 = 100%)
  time_start            DateTime      @default(now()) // Thời điểm bắt đầu in
  time_end              DateTime?                  // Thời điểm hoàn thành in
  status                PrintStatus   @default(PENDING) // Trạng thái lệnh in
  pages_to_be_printed   Int[]         @default([]) // Mảng các số trang cần in    
  num_pages_consumed    Int?                          // Số trang tiêu tốn cho tài khoản

  document_id           Int?           // Liên kết với Document
  document              Document?     @relation("DocumentPrintOrders", fields: [document_id], references: [document_id], onDelete: SetNull, onUpdate: Cascade)

  user_id               Int           // Liên kết với User
  user                  User          @relation("UserPrintOrders", fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)

  printer_id            Int
  printer               Printer       @relation("PrintOrderDocuments", fields: [printer_id], references: [printer_id], onDelete: Cascade, onUpdate: Cascade)

  reports               PrintOrderReport[]  @relation("PrintOrderToReport")
}


model Document {
  document_id     Int           @id @default(autoincrement())
  filename        String        @db.VarChar(256)
  mimetype        String        @db.VarChar(64) // Ví dụ: pdf, docx
  page_count      String        @default("unknown")
  size            Int           @default(0)    // Đơn vị: KB hoặc MB
  url             String        @db.VarChar(256) // Đường dẫn file (Cloud hoặc local)
  path            String        @unique @db.VarChar(256) // Đường dẫn file trong bucket

  created_at      DateTime      @default(now())
  updated_at      DateTime      @default(now()) @updatedAt
  user_id         Int
  user            User          @relation("UserDocuments", fields: [user_id], references: [user_id])
  printOrders     PrintOrder[]  @relation("DocumentPrintOrders")
}

model PurchaseOrder {
  purchase_id     Int            @id @default(autoincrement())
  method          PaymentMethod  @default(BANKING)
  amount          Int            @default(0)
  price           Float          @default(0)
  status          PurchaseStatus @default(UNPAID)

  created_at      DateTime       @default(now())
  updated_at      DateTime       @default(now()) @updatedAt

  user            User?          @relation("UserPurchaseOrders", fields: [user_id], references: [user_id])
  user_id         Int?
}

model Report {
  report_id     Int           @id @default(autoincrement())
  type          ReportType
  month         Int?
  year          Int?
  
  printOrders   PrintOrderReport[]  @relation("ReportToPrintOrder")
}

model PrintOrderReport {
  print_id      Int
  report_id     Int
  
  printOrder    PrintOrder    @relation("PrintOrderToReport", fields: [print_id], references: [print_id])
  report        Report        @relation("ReportToPrintOrder", fields: [report_id], references: [report_id])

  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt @default(now())

  @@id([print_id, report_id])
  @@map("print_order_reports")
}

model Avatar {
  user_id       Int           @unique
  user          User          @relation("UserAvatar", fields: [user_id], references: [user_id])

  url           String        @db.VarChar(256)
  path          String        @unique @db.VarChar(256)

  @@id([user_id])
}

enum UserRole {
  STUDENT
  LECTURER
  SPSO
}

enum Campus {
  ONE
  TWO
}

enum Building {
  H1
  H2
  H3
  H6
  Gymnasium
}

enum PrinterStatus {
  RUNNING
  DISABLED
  DELETED
}

enum Side {
  ONE
  TWO
}

enum PageSize {
  A4
  A3
}

enum Orientation {
  PORTRAIT
  LANDSCAPE
}

enum PrintStatus {
  SUCCESS
  PROGRESS
  FAILED
  PENDING
  CANCELLED
}

enum PurchaseStatus {
  UNPAID
  PAID
  CANCELED
}

enum ReportType {
  MONTHLY
  YEARLY
}

enum PaymentMethod {
  BANKING
  MOMO
  ZALOPAY
}
